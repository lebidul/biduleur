name: Build and Release - Bidul

on:
  push:
    tags:
      - 'v*' # Se déclenche quand un tag (ex: v1.0.1) est poussé
  workflow_dispatch: # Permet de le lancer manuellement depuis l'interface GitHub
    inputs:
      version:
        description: 'Numéro de version à forcer (ex: 1.0.0)'
        required: true
        default: '1.0.0'

jobs:
  build-release:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller==6.6.0
          # Installe les dépendances des DEUX modules
          pip install -r biduleur/requirements.txt
#          pip install -r misenpageur/requirements.txt

      - name: Update version file
        shell: pwsh
        run: |
          # Utilise la version du tag ou celle fournie manuellement
          $version = "${{ github.ref_name }}".Replace("v", "") `
            -or "${{ github.event.inputs.version }}" `
            -or "1.0.0"
          (Get-Content -Path bidul_version_info.txt -Raw).Replace("1.0.0", $version) `
            | Set-Content -Path bidul_version_info.txt
          echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Build with PyInstaller
        run: pyinstaller bidul.spec --clean --noconfirm

      - name: Package release artifact
        shell: pwsh
        run: |
          # Créer un dossier de distribution propre
          New-Item -ItemType Directory -Force -Path "release"
          
          # Copier l'exécutable et ses dépendances
          Copy-Item -Path "dist/bidul/*" -Destination "release/" -Recurse
          
          # Ajouter un README
          "Bidul v${{ env.VERSION }}" | Out-File -FilePath release/README.txt -Encoding utf8
          
          # Créer l'archive ZIP
          Compress-Archive -Path "release/*" -DestinationPath "bidul-${{ env.VERSION }}-win64.zip"

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Bidul v${{ env.VERSION }}
          tag_name: ${{ github.ref_name || format('v{0}', github.event.inputs.version) }}
          files: bidul-${{ env.VERSION }}-win64.zip
          body: |
            Version ${{ env.VERSION }} de Bidul.
            - Téléchargez le fichier `bidul-${{ env.VERSION }}-win64.zip` ci-dessous.
            - Décompressez l'archive.
            - Lancez `bidul.exe`.